{"version":3,"sources":["store/actions/errorHandlerActions.js","axios/axios.js","store/actions/repositoryActions.js","components/Modals/SuccessModal/SuccessModal.js","components/Modals/ErrorModal/ErrorModal.js","constainers/Account/DeleteAccount/DeleteAccount.js"],"names":["closeErrorModal","error","type","actionTypes","handleHTTPError","props","response","status","execute404Handler","execute500Handler","executeOtherErrorHandler","instance","axios","create","baseURL","headers","headerType","getData","url","console","log","dispatch","get","then","data","catch","errorHandlerActions","postData","obj","post","postDataSuccess","putData","put","putDataSuccess","deleteData","delete","deleteDataSuccess","closeSuccessModal","SuccessModal","show","backdrop","Header","modalHeaderText","Body","modalBodyText","Footer","bsStyle","onClick","successClick","okButtonText","ErrorModal","closeModal","DeleteAccount","useSelector","state","repository","showSuccessModal","showErrorModal","errorHandler","errorMessage","useDispatch","useEffect","match","params","id","repositoryActions","account","md","htmlFor","name","format","dateCreated","accountType","mdOffset","event","preventDefault","history","push"],"mappings":"2HAAA,gFAwBaA,EAAkB,SAACC,GAC5B,MAAO,CACHC,KAAMC,MAIDC,EAAkB,SAACH,EAAOI,GACnC,OAA8B,MAA1BJ,EAAMK,SAASC,OA7BG,SAACF,GACvB,MAAO,CACHH,KAAMC,IACNE,MAAOA,GA2BAG,CAAkBH,GAEM,MAA1BJ,EAAMK,SAASC,OAzBF,SAACF,GACvB,MAAO,CACHH,KAAMC,IACNE,MAAOA,GAuBAI,CAAkBJ,GAnBA,SAACJ,GAC9B,MAAO,CACHC,KAAMC,IACNF,MAAOA,GAmBAS,CAAyBT,K,4EC1BzBU,E,OAREC,EAAMC,OAAO,CAE1BC,QAAS,kCACTC,QAAQ,CACJC,WAAY,yB,SCRpB,0KAIA,IAQaC,EAAU,SAACC,EAAKb,GAEzB,OADAc,QAAQC,IAAI,YACL,SAACC,GACJF,QAAQC,IAAI,mBACZR,EAAMU,IAAIJ,GACTK,MAAK,SAAAjB,GAbS,IAACkB,EAcZL,QAAQC,IAAId,GACZe,GAfYG,EAeYlB,EAASkB,KAdlC,CACHtB,KAAMC,IACNqB,KAAMA,QAaHC,OAAM,SAAAxB,GAELoB,EAASK,IAAoCzB,EAAOI,SAYnDsB,EAAW,SAACT,EAAKU,EAAKvB,GAC/B,OAAO,SAACgB,GACJF,QAAQC,IAAI,cACZD,QAAQC,IAAI,OAASF,GACrBC,QAAQC,IAAIQ,GACZhB,EAAMiB,KAAKX,EAAKU,GACfL,MAAK,SAAAjB,GACFa,QAAQC,IAAId,GACZe,EAhBY,SAACf,GACrB,MAAO,CACHJ,KAAMC,IACNG,SAAUA,GAaGwB,CAAgBxB,OAC1BmB,OAAM,SAAAxB,GACLkB,QAAQC,IAAI,mBAAoBnB,EAAMK,UAEtCe,EAASK,IAAoCzB,EAAOI,SAanD0B,EAAU,SAACb,EAAKU,EAAKvB,GAC9B,OAAO,SAACgB,GACJT,EAAMoB,IAAId,EAAKU,GACdL,MAAK,SAAAjB,GACFe,EAZW,SAACf,GACpB,MAAO,CACHJ,KAAMC,IACNG,SAAUA,GASG2B,CAAe3B,OACzBmB,OAAM,SAAAxB,GAELoB,EAASK,IAAoCzB,EAAOI,SAanD6B,EAAa,SAAChB,EAAKb,GAC5B,OAAO,SAACgB,GACJT,EAAMuB,OAAOjB,GACZK,MAAK,SAAAjB,GACFe,EAZc,SAACf,GACvB,MAAO,CACHJ,KAAMC,IACNG,SAAUA,GASG8B,CAAkB9B,OAC5BmB,OAAM,SAAAxB,GAELoB,EAASK,IAAoCzB,EAAOI,SAOnDgC,EAAoB,SAAChC,EAAOa,GACrC,MAAO,CACHhB,KAAMC,IACNE,MAAOA,EACPa,IAAKA,K,iCCjGb,mCAyBeoB,IAlBM,SAACjC,GAClB,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAOkC,KAAMlC,EAAMkC,KAAMC,SAAS,UAC9B,kBAAC,IAAMC,OAAP,KACKpC,EAAMqC,iBAEX,kBAAC,IAAMC,KAAP,KACI,2BAAItC,EAAMuC,gBAEd,kBAAC,IAAMC,OAAP,KACI,kBAAC,IAAD,CAAQC,QAAQ,UAAUC,QAAS1C,EAAM2C,cAAe3C,EAAM4C,mB,iCClBlF,mCAuBeC,IAlBI,SAAC7C,GAChB,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAOkC,KAAMlC,EAAMkC,KAAMC,SAAS,UAC9B,kBAAC,IAAMC,OAAP,KACKpC,EAAMqC,iBAEX,kBAAC,IAAMC,KAAP,KACI,2BAAItC,EAAMuC,gBAEd,kBAAC,IAAMC,OAAP,KACI,kBAAC,IAAD,CAAQC,QAAQ,SAASC,QAAS1C,EAAM8C,YAAa9C,EAAM4C,mB,0ICgEhEG,UAvEO,SAAC/C,GACnB,IAAMmB,EAAO6B,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAW/B,QAC7CgC,EAAmBH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWC,oBACzDC,EAAiBJ,aAAY,SAAAC,GAAK,OAAIA,EAAMI,aAAaD,kBACzDE,EAAeN,aAAY,SAAAC,GAAK,OAAIA,EAAMI,aAAaC,gBAEvDtC,EAAWuC,cACjBC,qBAAU,WACN,IACM3C,EAAM,iBADDb,EAAMyD,MAAMC,OAAOC,GAE9B3C,EAAS4C,IAA0B/C,EAA1B,eAAoCb,OAC/C,CAACA,EAAOgB,IAGV,IAAI6C,EAAO,eAAO1C,GAalB,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK2C,GAAI,IACT,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKA,GAAI,GACL,kBAAC,IAAD,CAAcC,QAAQ,eAAtB,kBAEJ,kBAAC,IAAD,CAAKD,GAAI,GACL,0BAAME,KAAK,eAAc,kBAAC,IAAD,CAAQC,OAAO,cAAcJ,EAAQK,gBAGtE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKJ,GAAI,GACL,kBAAC,IAAD,CAAcC,QAAQ,eAAtB,mBAEJ,kBAAC,IAAD,CAAKD,GAAI,GACL,0BAAME,KAAK,eAAeH,EAAQM,kBAMlD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,SAAU,EAAGN,GAAI,GAClB,kBAAC,IAAD,CAAQjE,KAAK,SAAS4C,QAAQ,OAAOC,QArC/B,SAAE2B,GACpBA,EAAMC,iBACN,IAAMzD,EAAM,iBAAmBM,EAAKwC,GAEpC3C,EAAS4C,IAA6B/C,EAA7B,eAAuCb,OAiCpC,WAEJ,kBAAC,IAAD,CAAK8D,GAAI,GACD,kBAAC,IAAD,CAAQrB,QAAQ,SAASC,QAjCjB,WACxB1C,EAAMuE,QAAQC,KAAK,iBAgCH,YAGZ,kBAAC,IAAD,CAActC,KAAMiB,EAAkBd,gBAAiB,kBACnDE,cAAe,gCACfK,aAAc,KACdD,aAAc,kBAAM3B,EAAS4C,IAAA,eAAwC5D,GAAQ,mBACjF,kBAAC,IAAD,CAAYkC,KAAMkB,EAAgBf,gBAAiB,gBAC/CE,cAAee,EACfV,aAAc,KACdE,WAAY,kBAAM9B,EAASK","file":"static/js/10.bcab2da0.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\r\n\r\nconst execute404Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_404_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst execute500Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_500_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst executeOtherErrorHandler = (error) => {\r\n    return {\r\n        type: actionTypes.HTTP_OTHER_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\n// no error\r\nexport const closeErrorModal = (error) => {\r\n    return {\r\n        type: actionTypes.CLOSE_ERROR_MODAL\r\n    }\r\n}\r\n\r\nexport const handleHTTPError = (error, props) => {\r\n    if (error.response.status === 404) {\r\n        return execute404Handler(props);\r\n    }\r\n    else if (error.response.status === 500) {\r\n        return execute500Handler(props);\r\n    }\r\n    else {\r\n        return executeOtherErrorHandler(error);\r\n    }\r\n}","import axios from 'axios';\r\n\r\n// axios custom instance: baseUrl and headers properties\r\n// use: axios.get('/api/owner')\r\nconst instance = axios.create({\r\n    //baseURL: 'http://localhost:5000',\r\n    baseURL: 'https://brokerage.herokuapp.com',\r\n    headers:{\r\n        headerType: 'example header type'\r\n    }\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios/axios';\r\nimport * as errorHandlerActions from './errorHandlerActions';\r\n\r\nconst getDataSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.GET_DATA_SUCCESS,\r\n        data: data\r\n    }\r\n}\r\n\r\n// counld be response, or resp\r\nexport const getData = (url, props) => {\r\n    console.log('get data')\r\n    return (dispatch) => {\r\n        console.log('before get data')\r\n        axios.get(url)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch(getDataSuccess(response.data))\r\n        }).catch(error =>{\r\n            //TODO: handle error when implement\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\nconst postDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.POST_DATA_SUCCESS,\r\n        response: response \r\n    }\r\n}\r\n\r\n// counld be response, or resp\r\nexport const postData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        console.log(\"dispatch= \")\r\n        console.log(\"url=\" + url)\r\n        console.log(obj)\r\n        axios.post(url, obj)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch(postDataSuccess(response))\r\n        }).catch(error =>{\r\n            console.log(\"error.response= \", error.response)\r\n            //TODO: handle error when implement\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst putDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.PUT_DATA_SUCCESS,\r\n        response: response \r\n    }\r\n}\r\n\r\n// counld be response, or resp\r\nexport const putData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.put(url, obj)\r\n        .then(response => {\r\n            dispatch(putDataSuccess(response))\r\n        }).catch(error =>{\r\n            //TODO: handle error when implement\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.DELETE_DATA_SUCCESS,\r\n        response: response \r\n    }\r\n}\r\n\r\n// counld be response, or resp\r\nexport const deleteData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.delete(url)\r\n        .then(response => {\r\n            dispatch(deleteDataSuccess(response))\r\n        }).catch(error =>{\r\n            //TODO: handle error when implement\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\n// take 2 params: props, url\r\n// return an object: send them to reducer to change reducer\r\nexport const closeSuccessModal = (props, url) => {\r\n    return {\r\n        type: actionTypes.CLOSE_SUCCESS_MODAL,\r\n        props: props,\r\n        url: url\r\n    }\r\n}","import React, { Fragment } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../ModalStyles.css';\r\n\r\n// Redux: showsuccessfully: props.show\r\n//props.successClick: method click on success modal +\r\n// like pop window\r\nconst SuccessModal = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Modal show={props.show} backdrop='static'>\r\n                <Modal.Header>\r\n                    {props.modalHeaderText}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{props.modalBodyText}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle=\"success\" onClick={props.successClick}>{props.okButtonText}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SuccessModal;","import React, { Fragment } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../ModalStyles.css';\r\n\r\n//onClick={props.closeModal}: show error modal bootstrap\r\nconst ErrorModal = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Modal show={props.show} backdrop='static'>\r\n                <Modal.Header>\r\n                    {props.modalHeaderText}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{props.modalBodyText}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle=\"danger\" onClick={props.closeModal}>{props.okButtonText}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ErrorModal;","import React, { Fragment, useEffect } from 'react';\r\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\r\nimport * as errorHandlerActions from '../../../store/actions/errorHandlerActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Well, Button, Col, Row, ControlLabel } from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\nimport SuccessModal from '../../../components/Modals/SuccessModal/SuccessModal';\r\nimport ErrorModal from '../../../components/Modals/ErrorModal/ErrorModal';\r\n\r\nconst DeleteAccount = (props) => {\r\n    const data = useSelector(state => state.repository.data);\r\n    const showSuccessModal = useSelector(state => state.repository.showSuccessModal);\r\n    const showErrorModal = useSelector(state => state.errorHandler.showErrorModal);\r\n    const errorMessage = useSelector(state => state.errorHandler.errorMessage);\r\n    \r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        const id = props.match.params.id;\r\n        const url = '/api/accounts/' + id;\r\n        dispatch(repositoryActions.getData(url, { ...props }));\r\n    },[props, dispatch]);\r\n\r\n\r\n    let account = {...data};\r\n\r\n    const deleteAccount = ( event )=> {\r\n        event.preventDefault();\r\n        const url = \"/api/accounts/\" + data.id;\r\n\r\n        dispatch(repositoryActions.deleteData(url, { ...props }));\r\n    }\r\n\r\n    const redirectToOwnerList = () => {\r\n        props.history.push('/owner-List');\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col md={10}>\r\n                <Well>\r\n                    <Row>\r\n                        <Col md={3}>\r\n                            <ControlLabel htmlFor='dateCreated'>Date Created:</ControlLabel>\r\n                        </Col>\r\n                        <Col md={7}>\r\n                            <span name='dateCreated'><Moment format=\"MM/DD/YYYY\">{account.dateCreated}</Moment></span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={3}>\r\n                            <ControlLabel htmlFor='accountType'>Accounts Type:</ControlLabel>\r\n                        </Col>\r\n                        <Col md={7}>\r\n                            <span name='accountType'>{account.accountType}</span>\r\n                        </Col>\r\n                    </Row>\r\n                </Well>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col mdOffset={8} md={1}>\r\n                    <Button type=\"submit\" bsStyle=\"info\" onClick={deleteAccount}>Delete</Button>\r\n                </Col>\r\n                <Col md={1}>\r\n                        <Button bsStyle='danger' onClick={redirectToOwnerList}>Cancel</Button>\r\n                </Col>\r\n            </Row>\r\n            <SuccessModal show={showSuccessModal} modalHeaderText={'Success message'}\r\n                modalBodyText={'Action completed successfylly'}\r\n                okButtonText={'OK'}\r\n                successClick={() => dispatch(repositoryActions.closeSuccessModal({...props}, '/owner-List'))} />\r\n            <ErrorModal show={showErrorModal} modalHeaderText={'Error message'}\r\n                modalBodyText={errorMessage}\r\n                okButtonText={'OK'}\r\n                closeModal={() => dispatch(errorHandlerActions.closeErrorModal())} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DeleteAccount;"],"sourceRoot":""}