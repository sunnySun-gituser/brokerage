{"version":3,"sources":["store/actions/errorHandlerActions.js","axios/axios.js","store/actions/repositoryActions.js","components/OwnerComponents/Owner/Owner.js","constainers/Owner/OwnerList/OwnerList.js"],"names":["closeErrorModal","error","type","actionTypes","handleHTTPError","props","response","status","execute404Handler","execute500Handler","executeOtherErrorHandler","instance","axios","create","baseURL","headers","headerType","getData","url","console","log","dispatch","get","then","data","catch","errorHandlerActions","postData","obj","post","postDataSuccess","putData","put","putDataSuccess","deleteData","delete","deleteDataSuccess","closeSuccessModal","Owner","owner","name","format","dateOfBirth","address","onClick","id","history","push","bsStyle","OwnerList","owners","useSelector","state","repository","length","map","key","useDispatch","useEffect","repositoryActions","mdOffset","md","to","responsive","striped"],"mappings":"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","file":"static/js/13.381d2d81.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\r\n\r\nconst execute404Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_404_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst execute500Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_500_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst executeOtherErrorHandler = (error) => {\r\n    return {\r\n        type: actionTypes.HTTP_OTHER_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\n// no error\r\nexport const closeErrorModal = (error) => {\r\n    return {\r\n        type: actionTypes.CLOSE_ERROR_MODAL\r\n    }\r\n}\r\n\r\nexport const handleHTTPError = (error, props) => {\r\n    if (error.response.status === 404) {\r\n        return execute404Handler(props);\r\n    }\r\n    else if (error.response.status === 500) {\r\n        return execute500Handler(props);\r\n    }\r\n    else {\r\n        return executeOtherErrorHandler(error);\r\n    }\r\n}","import axios from 'axios';\r\n\r\n// axios custom instance: baseUrl and headers properties\r\n// use: axios.get('/api/owner')\r\nconst instance = axios.create({\r\n    //baseURL: 'http://localhost:5000',\r\n    baseURL: 'https://brokerage.herokuapp.com',\r\n    headers:{\r\n        headerType: 'example header type'\r\n    }\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios/axios';\r\nimport * as errorHandlerActions from './errorHandlerActions';\r\n\r\nconst getDataSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.GET_DATA_SUCCESS,\r\n        data: data\r\n    }\r\n}\r\n\r\n// counld be response, or resp\r\nexport const getData = (url, props) => {\r\n    console.log('get data')\r\n    return (dispatch) => {\r\n        console.log('before get data')\r\n        axios.get(url)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch(getDataSuccess(response.data))\r\n        }).catch(error =>{\r\n            //TODO: handle error when implement\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\nconst postDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.POST_DATA_SUCCESS,\r\n        response: response \r\n    }\r\n}\r\n\r\n// counld be response, or resp\r\nexport const postData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        console.log(\"dispatch= \")\r\n        console.log(\"url=\" + url)\r\n        console.log(obj)\r\n        axios.post(url, obj)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch(postDataSuccess(response))\r\n        }).catch(error =>{\r\n            console.log(\"error.response= \", error.response)\r\n            //TODO: handle error when implement\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst putDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.PUT_DATA_SUCCESS,\r\n        response: response \r\n    }\r\n}\r\n\r\n// counld be response, or resp\r\nexport const putData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.put(url, obj)\r\n        .then(response => {\r\n            dispatch(putDataSuccess(response))\r\n        }).catch(error =>{\r\n            //TODO: handle error when implement\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.DELETE_DATA_SUCCESS,\r\n        response: response \r\n    }\r\n}\r\n\r\n// counld be response, or resp\r\nexport const deleteData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.delete(url)\r\n        .then(response => {\r\n            dispatch(deleteDataSuccess(response))\r\n        }).catch(error =>{\r\n            //TODO: handle error when implement\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\n// take 2 params: props, url\r\n// return an object: send them to reducer to change reducer\r\nexport const closeSuccessModal = (props, url) => {\r\n    return {\r\n        type: actionTypes.CLOSE_SUCCESS_MODAL,\r\n        props: props,\r\n        url: url\r\n    }\r\n}","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst redirectToOwnerDetails = (id, history) => {\r\n    history.push('/ownerDetails/' + id);\r\n}\r\n\r\nconst redirectToUpdateOwner = (id, history) => {\r\n    history.push('/updateOwner/' + id);\r\n}\r\n\r\nconst redirectToDeleteOwner = (id, history) => {\r\n    history.push('/deleteOwner/' + id);\r\n}\r\n\r\nconst Owner = (props) => {\r\n    return (\r\n        <tr>\r\n            <td>{props.owner.name}</td>\r\n            <td><Moment format=\"MM/DD/YYYY\">{props.owner.dateOfBirth}</Moment></td>\r\n            <td>{props.owner.address}</td>\r\n            <td>\r\n                <Button onClick={() => redirectToOwnerDetails(props.owner.id, props.history)}>Details</Button>\r\n            </td>\r\n            <td>\r\n                <Button bsStyle=\"success\" onClick={() => redirectToUpdateOwner(props.owner.id, props.history)}>Update</Button>\r\n            </td>\r\n            <td>\r\n                <Button bsStyle=\"danger\" onClick={() => redirectToDeleteOwner(props.owner.id, props.history)}>Delete</Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Owner;","import React, { Fragment, useEffect } from 'react';\r\nimport { Table, Col, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport * as repositoryActions from '../../../store/actions/repositoryActions'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Owner from '../../../components/OwnerComponents/Owner/Owner';\r\n\r\n// owners: to hold all owners in the db\r\nconst OwnerList = (props) => {\r\n\r\n    let owners = [];\r\n    // display multiplay owner on the owner array: currently empty\r\n    // get any from action, db\r\n    // put in the state, get it out from state, put it on the page\r\n    // const data = useSelector(state => state.data);\r\n    // useSeletor: to access the state\r\n    // state reducers: repository, errorHandler\r\n    const data = useSelector(state => state.repository.data);\r\n\r\n    // {...props}: to pass route to owner.js: using props.history to redirect \r\n    // owner: props.owner\r\n    // key: for creating child components from the array \r\n    if(data && data.length > 0){\r\n        owners = data.map(owner => {\r\n            return (\r\n                <Owner key={owner.id} owner={owner} {...props} />\r\n            )\r\n        })\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    //using hooks:useEffect()\r\n    useEffect(() =>{\r\n        let url = '/api/owner';\r\n        console.log('line 30')\r\n        //don't change props: \r\n        dispatch(repositoryActions.getData(url, {...props}));\r\n    }, [dispatch, props])//dependency array: by default if dispatch, props change, it run again\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col mdOffset={10} md={2}>\r\n                    <Link to='/createOwner' >Create Owner</Link>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table responsive striped>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Date of birth</th>\r\n                                <th>Address</th>\r\n                                <th>Details</th>\r\n                                <th>Update</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {owners}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OwnerList;"],"sourceRoot":""}