{"version":3,"sources":["store/actions/actionTypes.js","components/Navigation/Navigation.js","components/Layout/Layout.js","components/Home/Home.js","components/ErrorPages/NotFound/NotFound.js","hoc/AsyncComponent/AsyncComponent.js","components/ErrorPages/InternalServer/InternalServer.js","constainers/App.js","serviceWorker.js","store/reducers/repositoryReducer.js","store/reducers/errorHandlerReducer.js","index.js"],"names":["GET_DATA_SUCCESS","POST_DATA_SUCCESS","PUT_DATA_SUCCESS","DELETE_DATA_SUCCESS","HTTP_404_ERROR","HTTP_500_ERROR","HTTP_OTHER_ERROR","CLOSE_ERROR_MODAL","CLOSE_SUCCESS_MODAL","Navigation","props","md","inverse","collapseOnSelect","Header","Brand","to","exact","Toggle","Collapse","eventKey","Layout","children","Home","className","NotFound","asyncComponent","importComponent","state","component","then","cmp","setState","default","C","this","Component","internalServer","AsyncOwnerList","AsyncOwnerDetails","AsyncCreateOwner","AsyncUpdateOwner","AsyncDeleteOwner","AsyncCreateAccount","AsyncUpdateAccount","AsyncDeleteAccount","App","path","InternalServer","Boolean","window","location","hostname","match","initialState","data","showSuccessModal","executeGetDataSuccess","action","executePostDataSuccess","executePutDataSuccess","executeDeleteDataSuccess","executeCloserSuccessModal","history","push","url","reducer","type","actionTypes","showErrorModal","errorMessage","execute404","execute500","executeOtherError","error","response","executeCloseErrorModal","rootReducers","combineReducers","repository","repositoryReducer","errorHandler","errorHandlerReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2MAAA,kTAAO,IAAMA,EAAmB,mBACnBC,EAAoB,oBACpBC,EAAmB,mBACnBC,EAAsB,sBACtBC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAmB,mBAEnBC,EAAoB,oBACpBC,EAAsB,uB,qOC0BpBC,EA7BI,SAACC,GAChB,OACI,kBAAC,IAAD,CAAKC,GAAI,IACL,kBAAC,IAAD,CAAQC,SAAO,EAACC,kBAAgB,GAC5B,kBAAC,IAAOC,OAAR,KACI,kBAAC,IAAOC,MAAR,KACI,kBAAC,UAAD,CAASC,GAAI,IAAKC,OAAK,GAAvB,kBAEJ,kBAAC,IAAOC,OAAR,OAEJ,kBAAC,IAAOC,SAAR,KACI,kBAAC,IAAD,KACI,kBAAC,gBAAD,CAAeH,GAAI,cAAeC,OAAK,GACnC,kBAAC,IAAD,CAASG,SAAU,GAAnB,uBCHbC,EAZA,SAACX,GACZ,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEJ,8BACKA,EAAMY,YCORC,G,OAZF,SAACb,GACV,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAI,IACL,yBAAKa,UAAW,YAAhB,8C,QCCDC,G,OARE,SAACf,GACd,OACI,uBAAGc,UAAW,YAAd,sC,wCCmBOE,EApBQ,SAACC,GACpB,kNACIC,MAAQ,CACJC,UAAW,MAFnB,mFAKwB,IAAD,OACfF,IACCG,MAAK,SAAAC,GACF,EAAKC,SAAS,CAACH,UAAWE,EAAIE,eAR1C,+BAYQ,IAAMC,EAAIC,KAAKP,MAAMC,UAErB,OAAOK,EAAI,kBAACA,EAAMC,KAAKzB,OAAY,SAd3C,GAAqB0B,cCIVC,G,OANQ,SAAC3B,GACpB,OACI,uBAAGc,UAAW,kBAAmB,iDCInCc,EAAiBZ,GAAe,WACpC,OAAO,+DAGHa,EAAoBb,GAAe,WACvC,OAAO,+DAGHc,EAAmBd,GAAe,WACtC,OAAO,8DAGHe,EAAmBf,GAAe,WACtC,OAAO,8DAGHgB,EAAmBhB,GAAe,WACtC,OAAO,+DAGHiB,EAAqBjB,GAAe,WACxC,OAAO,8DAGHkB,EAAqBlB,GAAe,WACxC,OAAO,8DAGHmB,EAAqBnB,GAAe,WACxC,OAAO,+DA0BMoB,MAvBf,WACE,OACE,kBAAC,gBAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAI9B,OAAK,EAACY,UAAWN,IACjC,kBAAC,IAAD,CAAOwB,KAAK,cAAc9B,OAAK,EAACY,UAAWS,IAC3C,kBAAC,IAAD,CAAOS,KAAK,oBAAoBlB,UAAWU,IAC3C,kBAAC,IAAD,CAAOQ,KAAK,eAAelB,UAAWW,IACtC,kBAAC,IAAD,CAAOO,KAAK,mBAAmBlB,UAAWY,IAC1C,kBAAC,IAAD,CAAOM,KAAK,mBAAmBlB,UAAWa,IAC1C,kBAAC,IAAD,CAAOK,KAAK,0BAA0BlB,UAAWc,IACjD,kBAAC,IAAD,CAAOI,KAAK,qBAAqBlB,UAAWe,IAC5C,kBAAC,IAAD,CAAOG,KAAK,qBAAqBlB,UAAWgB,IAC5C,kBAAC,IAAD,CAAOE,KAAK,OAAOlB,UAAWmB,IAC9B,kBAAC,IAAD,CAAOD,KAAK,IAAIlB,UAAWJ,IAC3B,8DC7CUwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBCbAC,EAAe,CACjBC,KAAM,KACNC,kBAAkB,GAGhBC,EAAwB,SAAC7B,EAAO8B,GAClC,OAAO,eACA9B,EADP,CAEI2B,KAAMG,EAAOH,QAIfI,EAAyB,SAAC/B,EAAO8B,GACnC,OAAO,eACA9B,EADP,CAEI4B,kBAAkB,KAIpBI,EAAwB,SAAChC,EAAO8B,GAClC,OAAO,eACA9B,EADP,CAEI4B,kBAAkB,KAIpBK,EAA2B,SAACjC,EAAO8B,GACrC,OAAO,eACA9B,EADP,CAEI4B,kBAAkB,KAMpBM,EAA4B,SAAClC,EAAO8B,GAGtC,OAFAA,EAAOhD,MAAMqD,QAAQC,KAAKN,EAAOO,KAE1B,eACArC,EADP,CAEI4B,kBAAkB,KAoBXU,EAhBC,WAAkC,IAAjCtC,EAAgC,uDAAxB0B,EAAcI,EAAU,uCAC7C,OAAOA,EAAOS,MACV,KAAKC,IACD,OAAOX,EAAsB7B,EAAO8B,GACxC,KAAKU,IACD,OAAOT,EAAuB/B,GAClC,KAAKwC,IACD,OAAOR,EAAsBhC,GACjC,KAAKwC,IACD,OAAOP,EAAyBjC,GACpC,KAAKwC,IACD,OAAON,EAA0BlC,EAAO8B,GAC5C,QACI,OAAO9B,I,QC5Db0B,EAAe,CACjBe,gBAAgB,EAChBC,aAAc,IAGZC,EAAa,SAAC3C,EAAO8B,GAEvB,OADAA,EAAOhD,MAAMqD,QAAQC,KAAK,QACnB,eAAKpC,IAGV4C,EAAa,SAAC5C,EAAO8B,GAEvB,OADAA,EAAOhD,MAAMqD,QAAQC,KAAK,QACnB,eAAKpC,IAGV6C,EAAoB,SAAC7C,EAAO8B,GAC9B,OAAO,eACA9B,EADP,CAEIyC,gBAAgB,EAChBC,aAAcZ,EAAOgB,MAAMC,SAASpB,QAItCqB,EAAyB,SAAChD,EAAO8B,GACnC,OAAO,eACA9B,EADP,CAEIyC,gBAAgB,EAChBC,aAAc,MAmBPJ,EAfC,WAAmC,IAAlCtC,EAAiC,uDAAzB0B,EAAcI,EAAW,uCAC9C,OAAQA,EAAOS,MACX,KAAKC,IACD,OAAOG,EAAW3C,EAAO8B,GAC7B,KAAKU,IACD,OAAOI,EAAW5C,EAAO8B,GAC7B,KAAKU,IACD,OAAOK,EAAkB7C,EAAO8B,GACpC,KAAKU,IACD,OAAOQ,EAAuBhD,GAClC,QACI,OAAOA,I,iBC9BbiD,EAAeC,YAAgB,CACjCC,WAAYC,EACZC,aAAcC,IAGZC,EAAmBjC,OAAOkC,sCAAwCC,IAElEC,EAAQC,YACVV,EACAM,EACIK,YAAgBC,OAIxBC,IAASC,OAAO,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,OACSM,SAASC,eAAe,SHqG/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlE,MAAK,SAAAmE,GACjCA,EAAaC,kB","file":"static/js/main.1f63fffe.chunk.js","sourcesContent":["export const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const POST_DATA_SUCCESS = 'POST_DATA_SUCCESS';\r\nexport const PUT_DATA_SUCCESS = 'PUT_DATA_SUCCESS';\r\nexport const DELETE_DATA_SUCCESS = 'DELETE_DATA_SUCCESS';\r\nexport const HTTP_404_ERROR = 'HTTP_404_ERROR';\r\nexport const HTTP_500_ERROR = 'HTTP_500_ERROR';\r\nexport const HTTP_OTHER_ERROR = 'HTTP_OTHER_ERROR';\r\n\r\nexport const CLOSE_ERROR_MODAL = 'CLOSE_ERROR_MODAL';\r\nexport const CLOSE_SUCCESS_MODAL = 'CLOSE_SUCCESS_MODAL';","import React from 'react';\r\nimport './Navigation.css';\r\nimport { Col, Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        <Col md={12} >\r\n            <Navbar inverse collapseOnSelect>\r\n                <Navbar.Header>\r\n                    <Navbar.Brand>\r\n                        <NavLink to={'/'} exact >Account-Owner</NavLink>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle />\r\n                </Navbar.Header>\r\n                <Navbar.Collapse>\r\n                    <Nav>\r\n                        <LinkContainer to={'/owner-list'} exact>\r\n                            <NavItem eventKey={1}>\r\n                                Owner Actions\r\n                            </NavItem>\r\n                        </LinkContainer>\r\n                        {/* <LinkContainer to={'/account-list'}>\r\n                            <NavItem eventKey={2}>\r\n                                Account Actions\r\n                            </NavItem>\r\n                        </LinkContainer> */}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { Grid, Row } from 'react-bootstrap';\r\nimport Navigation from '../Navigation/Navigation';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Grid>\r\n            <Row>\r\n                <Navigation />\r\n            </Row>\r\n            <main>\r\n                {props.children}\r\n            </main>\r\n        </Grid>\r\n    )\r\n}\r\nexport default Layout;","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport './Home.css';\r\n\r\n// 12: have 12 columns work with\r\n//\r\nconst Home = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <div className={'homeText'}>\r\n                    \"WELCOME TO ACCOUNT-OWNER APPLICATION\"\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './NotFound.css'\r\n\r\nconst NotFound = (props) => {\r\n    return (\r\n        <p className={'notFound'}>\r\n            \"404 SORRY COULDN'T FIND IT!!!\"\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\n\r\n//HOC: higher-order-component, meaning a component that returns a component\r\n// loading components asynchronously with it (apply for it in App.js) \r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component{\r\n        state = {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount(){\r\n            importComponent()\r\n            .then(cmp => {\r\n                this.setState({component: cmp.default});\r\n            });\r\n        }\r\n        render(){\r\n            const C = this.state.component;\r\n\r\n            return C ? <C {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default asyncComponent;","import React from 'react';\r\nimport './InternalServer.css';\r\n\r\nconst internalServer = (props) => {\r\n    return (\r\n        <p className={'internalServer'}>{\"500 SERVER ERROR, CONTACT ADMINISTRATOR!!!!\"}</p>\r\n    )\r\n}\r\n\r\nexport default internalServer;","import React from 'react';\nimport './App.css';\nimport Layout from '../components/Layout/Layout';\nimport Home from '../components/Home/Home';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport NotFound from '../components/ErrorPages/NotFound/NotFound';\nimport asyncComponent from '../hoc/AsyncComponent/AsyncComponent';\nimport InternalServer from '../components/ErrorPages/InternalServer/InternalServer';\n\nconst AsyncOwnerList = asyncComponent(() =>{\n  return import('./Owner/OwnerList/OwnerList');\n});\n\nconst AsyncOwnerDetails = asyncComponent(() =>{\n  return import('./Owner/OwnerDetails/OwnerDetails');\n});\n\nconst AsyncCreateOwner = asyncComponent(() =>{\n  return import('./Owner/CreateOwner/CreateOwner');\n});\n\nconst AsyncUpdateOwner = asyncComponent(() =>{\n  return import('./Owner/UpdateOwner/UpdateOwner');\n});\n\nconst AsyncDeleteOwner = asyncComponent(() =>{\n  return import('./Owner/DeleteOwner/DeleteOwner');\n});\n\nconst AsyncCreateAccount = asyncComponent(() =>{\n  return import('./Account/CreateAccount/CreateAccount');\n});\n\nconst AsyncUpdateAccount = asyncComponent(() =>{\n  return import('./Account/UpdateAccount/UpdateAccount');\n});\n\nconst AsyncDeleteAccount = asyncComponent(() =>{\n  return import('./Account/DeleteAccount/DeleteAccount');\n});\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/owner-list\" exact component={AsyncOwnerList} />\n          <Route path=\"/ownerDetails/:id\" component={AsyncOwnerDetails} />\n          <Route path=\"/createOwner\" component={AsyncCreateOwner} />\n          <Route path=\"/updateOwner/:id\" component={AsyncUpdateOwner} />\n          <Route path=\"/deleteOwner/:id\" component={AsyncDeleteOwner} />\n          <Route path=\"/createAccount/:ownerId\" component={AsyncCreateAccount} />\n          <Route path=\"/updateAccount/:id\" component={AsyncUpdateAccount} />\n          <Route path=\"/deleteAccount/:id\" component={AsyncDeleteAccount} />\n          <Route path=\"/500\" component={InternalServer} />\n          <Route path=\"*\" component={NotFound} />\n          <p>Here is more children stuff</p>\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\n// Modal window: when the window on the top of evrything, do everything do with window\r\n// build in the pages\r\n// if you access sth, the modal window comes up says success\r\nconst initialState = {\r\n    data: null,\r\n    showSuccessModal: false\r\n}\r\n \r\nconst executeGetDataSuccess = (state, action) =>{\r\n    return {\r\n        ...state,\r\n        data: action.data \r\n    }\r\n}\r\n\r\nconst executePostDataSuccess = (state, action) =>{\r\n    return {\r\n        ...state,\r\n        showSuccessModal: true \r\n    }\r\n}\r\n\r\nconst executePutDataSuccess = (state, action) =>{\r\n    return {\r\n        ...state,\r\n        showSuccessModal: true \r\n    }\r\n}\r\n\r\nconst executeDeleteDataSuccess = (state, action) =>{\r\n    return {\r\n        ...state,\r\n        showSuccessModal: true \r\n    }\r\n}\r\n\r\n// false: closing it\r\n// go back to owner page\r\nconst executeCloserSuccessModal = (state, action) =>{\r\n    action.props.history.push(action.url);\r\n\r\n    return {\r\n        ...state,\r\n        showSuccessModal: false\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case actionTypes.GET_DATA_SUCCESS:\r\n            return executeGetDataSuccess(state, action);\r\n        case actionTypes.POST_DATA_SUCCESS:\r\n            return executePostDataSuccess(state, action);\r\n        case actionTypes.PUT_DATA_SUCCESS:\r\n            return executePutDataSuccess(state, action);\r\n        case actionTypes.DELETE_DATA_SUCCESS:\r\n            return executeDeleteDataSuccess(state, action);\r\n        case actionTypes.CLOSE_SUCCESS_MODAL:\r\n            return executeCloserSuccessModal(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    showErrorModal: false,\r\n    errorMessage: ''\r\n}\r\n\r\nconst execute404 = (state, action) => {\r\n    action.props.history.push('/404');\r\n    return { ...state };\r\n}\r\n\r\nconst execute500 = (state, action) => {\r\n    action.props.history.push('/500');\r\n    return { ...state };\r\n}\r\n\r\nconst executeOtherError = (state, action) => {\r\n    return {\r\n        ...state,\r\n        showErrorModal: true,\r\n        errorMessage: action.error.response.data\r\n    };\r\n}\r\n\r\nconst executeCloseErrorModal = (state, action) => {\r\n    return {\r\n        ...state,\r\n        showErrorModal: false,\r\n        errorMessage: ''\r\n    };\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.HTTP_404_ERROR:\r\n            return execute404(state, action);\r\n        case actionTypes.HTTP_500_ERROR:\r\n            return execute500(state, action);\r\n        case actionTypes.HTTP_OTHER_ERROR:\r\n            return executeOtherError(state, action);\r\n        case actionTypes.CLOSE_ERROR_MODAL:\r\n            return executeCloseErrorModal(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nimport './index.css';\nimport App from './constainers/App';\nimport * as serviceWorker from './serviceWorker';\nimport repositoryReducer from './store/reducers/repositoryReducer'\nimport {Provider} from 'react-redux';\nimport errorHandlerReducer from './store/reducers/errorHandlerReducer';\nimport {createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\n\nconst rootReducers = combineReducers({\n    repository: repositoryReducer,\n    errorHandler: errorHandlerReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n    rootReducers,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\n\nReactDOM.render(<Provider store={store}>\n                    <App />\n                </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}