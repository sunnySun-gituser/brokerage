{"version":3,"sources":["store/actions/errorHandlerActions.js","axios/axios.js","store/actions/repositoryActions.js","components/OwnerComponents/OwnersAccounts/OwnersAccounts.js","constainers/Owner/OwnerDetails/OwnerDetails.js"],"names":["closeErrorModal","error","type","actionTypes","handleHTTPError","props","response","status","execute404Handler","execute500Handler","executeOtherErrorHandler","instance","axios","create","baseURL","headers","headerType","getData","url","console","log","dispatch","get","then","data","catch","errorHandlerActions","postData","obj","post","postDataSuccess","putData","put","putDataSuccess","deleteData","delete","deleteDataSuccess","closeSuccessModal","OwnersAccounts","accounts","map","account","key","id","accountType","format","dateCreated","bsStyle","onClick","history","push","md","responsive","striped","OwnerDetails","useDispatch","ownerId","match","params","address","useEffect","repositoryActions","owner","useSelector","state","repository","mdOffset","to","name","dateOfBirth","length","className","renderTypeOfUserConditionally"],"mappings":"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","file":"static/js/12.87d59519.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\r\n\r\nconst execute404Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_404_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst execute500Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_500_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst executeOtherErrorHandler = (error) => {\r\n    return {\r\n        type: actionTypes.HTTP_OTHER_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\n// no error\r\nexport const closeErrorModal = (error) => {\r\n    return {\r\n        type: actionTypes.CLOSE_ERROR_MODAL\r\n    }\r\n}\r\n\r\nexport const handleHTTPError = (error, props) => {\r\n    if (error.response.status === 404) {\r\n        return execute404Handler(props);\r\n    }\r\n    else if (error.response.status === 500) {\r\n        return execute500Handler(props);\r\n    }\r\n    else {\r\n        return executeOtherErrorHandler(error);\r\n    }\r\n}","import axios from 'axios';\r\n\r\n// axios custom instance: baseUrl and headers properties\r\n// use: axios.get('/api/owner')\r\nconst instance = axios.create({\r\n    //baseURL: 'http://localhost:5000',\r\n    baseURL: 'https://brokerage.herokuapp.com',\r\n    headers:{\r\n        headerType: 'example header type'\r\n    }\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios/axios';\r\nimport * as errorHandlerActions from './errorHandlerActions';\r\n\r\nconst getDataSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.GET_DATA_SUCCESS,\r\n        data: data\r\n    }\r\n}\r\n\r\n// counld be response, or resp\r\nexport const getData = (url, props) => {\r\n    console.log('get data')\r\n    return (dispatch) => {\r\n        console.log('before get data')\r\n        axios.get(url)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch(getDataSuccess(response.data))\r\n        }).catch(error =>{\r\n            //TODO: handle error when implement\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\nconst postDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.POST_DATA_SUCCESS,\r\n        response: response \r\n    }\r\n}\r\n\r\n// counld be response, or resp\r\nexport const postData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        console.log(\"dispatch= \")\r\n        console.log(\"url=\" + url)\r\n        console.log(obj)\r\n        axios.post(url, obj)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch(postDataSuccess(response))\r\n        }).catch(error =>{\r\n            console.log(\"error.response= \", error.response)\r\n            //TODO: handle error when implement\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst putDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.PUT_DATA_SUCCESS,\r\n        response: response \r\n    }\r\n}\r\n\r\n// counld be response, or resp\r\nexport const putData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.put(url, obj)\r\n        .then(response => {\r\n            dispatch(putDataSuccess(response))\r\n        }).catch(error =>{\r\n            //TODO: handle error when implement\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.DELETE_DATA_SUCCESS,\r\n        response: response \r\n    }\r\n}\r\n\r\n// counld be response, or resp\r\nexport const deleteData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.delete(url)\r\n        .then(response => {\r\n            dispatch(deleteDataSuccess(response))\r\n        }).catch(error =>{\r\n            //TODO: handle error when implement\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\n// take 2 params: props, url\r\n// return an object: send them to reducer to change reducer\r\nexport const closeSuccessModal = (props, url) => {\r\n    return {\r\n        type: actionTypes.CLOSE_SUCCESS_MODAL,\r\n        props: props,\r\n        url: url\r\n    }\r\n}","import React from 'react';\r\nimport { Row, Col, Table, Button } from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\n\r\nconst OwnersAccounts = (props) => {\r\n    console.log(\"props = \", props)\r\n    let accounts = null;\r\n\r\n    const redirectToUpdateAccount = (id, history) => {\r\n        console.log(\"id = \", id);\r\n        history.push('/updateAccount/' + id);\r\n    }\r\n\r\n    const redirectToDeleteAccount = (id, history) => {\r\n        console.log(\"id = \", id);\r\n        history.push('/deleteAccount/' + id);\r\n    }\r\n\r\n    if (props.accounts) {\r\n        accounts = props.accounts.map(account => {\r\n          return (\r\n                <tr key={account.id}>\r\n                    <td>{account.accountType}</td>\r\n                    <td><Moment format=\"MM/DD/YYYY\">{account.dateCreated}</Moment></td>\r\n                    <td>\r\n                        <Button bsStyle=\"success\" onClick={() => redirectToUpdateAccount(account.id, props.history)}>Update</Button>\r\n                    </td>\r\n                    <td>\r\n                        <Button bsStyle=\"danger\" onClick={() => redirectToDeleteAccount(account.id, props.history)}>Delete</Button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <Table responsive striped>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Account type</th>\r\n                            <th>Date created</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {accounts}\r\n                    </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default OwnersAccounts;","import React, { Fragment, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Well, Row, Col } from 'react-bootstrap';\r\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\r\nimport Moment from 'react-moment';\r\nimport OwnersAccounts from '../../../components/OwnerComponents/OwnersAccounts/OwnersAccounts';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// OwnersAccounts component: does not have route for it, \r\n// so needs to use {...props} to pass route to it \r\nconst OwnerDetails = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    let ownerId = props.match.params.id;\r\n    let address = '/createAccount/' + ownerId; \r\n\r\n    useEffect(() => {\r\n        // let id = props.match.params.id;\r\n        let url = '/api/owner/' + ownerId + '/account/';\r\n        console.log(url)\r\n        dispatch(repositoryActions.getData(url, {...props}))\r\n    }, [props, dispatch, ownerId])\r\n\r\n    const owner = useSelector(state=> state.repository.data);\r\n\r\n    const renderTypeOfUserConditionally = (owner) => {\r\n        let typeOfUser = null;\r\n    \r\n        if (owner.accounts && owner.accounts.length <= 2) {\r\n            typeOfUser = (\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <strong>Type of user:</strong>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <span className={'text-success'}>Beginner user.</span>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n        else {\r\n            typeOfUser = (\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <strong>Type of user:</strong>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <span className={'text-info'}>Advanced user.</span>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n    \r\n        return typeOfUser;\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n             <Row>\r\n                <Col mdOffset={10} md={2}>\r\n                    <Link to={address} >Create Account</Link>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Well>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <strong>Owner name:</strong>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        {owner.name}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <strong>Date of birth:</strong>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Moment format=\"MM/DD/YYYY\">{owner.dateOfBirth}</Moment>\r\n                    </Col>\r\n                </Row>\r\n                {renderTypeOfUserConditionally(owner)}\r\n            </Well>\r\n            <OwnersAccounts accounts={owner.accounts} {...props} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OwnerDetails;"],"sourceRoot":""}